{"version":3,"sources":["components/Form.js","components/Event.js","components/Calender.js","components/Login.js","components/Success.js","App.js","index.js"],"names":["CalendarDetail","props","console","log","Form","FormGroup","Label","for","Input","type","name","id","value","title","onChange","handleChange","start","end","detail","SavedEvent","Button","onClick","handleClickApp","idApp","color","outline","Badge","fakeApp","20200305","timeStart","timeEnd","appointmentDetails","Calendar","state","currentMonth","Date","selectedDate","selectedId","dayModal","modal","temp","renderAppointments","setState","toggle","day","format","e","stopPropagation","event","target","handleSave","preventDefault","dayTemp","onDateClick","nextMonth","dateFns","prevMonth","this","className","days","startDate","i","push","key","monthStart","monthEnd","endDate","rows","formattedDate","cloneDay","map","appt","renderHeader","renderDays","renderCells","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","React","Component","Login","handleSubmit","axios","post","email","password","then","response","row","Col","sm","md","size","offset","style","paddingTop","action","method","placeholder","check","Success","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.683744f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst CalendarDetail = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <Form>\r\n\r\n            <FormGroup>\r\n                <Label for=\"title\">Title</Label>\r\n                <Input\r\n                    type=\"input\"\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    value={props.title}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n                <Label for=\"timeStart\">Start</Label>\r\n                <Input\r\n                    type=\"datetime\"\r\n                    name=\"timeStart\"\r\n                    id=\"timeStart\"\r\n                    value={props.start}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n                <Label for=\"timeEnd\">End</Label>\r\n                <Input\r\n                    type=\"datetime\"\r\n                    name=\"timeEnd\"\r\n                    id=\"timeEnd\"\r\n                    value={props.end}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n                <Label for=\"appointmentDetails\">Details</Label>\r\n                <Input\r\n                    type=\"textarea\"\r\n                    name=\"appointmentDetails\"\r\n                    id=\"appointmentDetails\"\r\n                    value={props.detail}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </FormGroup>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CalendarDetail;","import React from 'react';\r\nimport { Badge, Button } from 'reactstrap';\r\n\r\nconst SavedEvent = (props) => {\r\n  return (\r\n    <div >\r\n      <Button onClick={\r\n       \r\n        props.handleClickApp\r\n      }\r\n      idApp={\"hihi\"}\r\n         color=\"primary\" outline>\r\n          {props.title}\r\n          <Badge color=\"secondary\"></Badge>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedEvent;","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport * as dateFns from 'date-fns';\r\nimport format from 'date-fns/format';\r\nimport CalendarDetail from './Form.js';\r\nimport SavedEvent from './Event.js'\r\n\r\nconst fakeApp = {\r\n\r\n    20200305: [\r\n        {\r\n            title: \"Grooming\",\r\n            timeStart: \"1300\",\r\n            timeEnd: \"2:00pm\",\r\n            appointmentDetails: \"In Aurora\"\r\n        },\r\n        {\r\n            title: \"Vet\",\r\n            timeStart: \"3:00pm\",\r\n            timeEnd: \"4:00pm\",\r\n            appointmentDetails: \"In Aurora\"\r\n        }\r\n    ]\r\n\r\n}\r\n\r\nclass Calendar extends React.Component {\r\n    state = {\r\n        currentMonth: new Date(),\r\n        selectedDate: new Date(),\r\n        selectedId: 0,\r\n        dayModal: \"\",\r\n        modal: false,\r\n        title: \"\",\r\n        timeStart: \"\",\r\n        timeEnd: \"\",\r\n        appointmentDetails: \"\",\r\n        temp: {}\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.renderAppointments()\r\n    }\r\n\r\n    renderAppointments = () => {\r\n\r\n        // call the db get all the appointmentes and when back update the state\r\n\r\n        this.setState({ temp: fakeApp })\r\n\r\n    }\r\n    //changes the view of the modal\r\n    toggle = day => {\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n            selectedDate: day,\r\n            dayModal: format(day, \"MMMM do, yyy\"),\r\n            title: \"\", timeStart: \"\", timeEnd: \"\", appointmentDetails: \"\" \r\n        });\r\n    }\r\n    //changes the view of the modal\r\n    handleClickApp = e => {\r\n        /// call the db and pass the info for the id then update the state\r\n        e.stopPropagation();\r\n        console.log(e)\r\n        let id=1\r\n        this.setState({ modal: !this.state.modal, selectedId: id, title: \"xxxx\", timeStart: \"08:00\", timeEnd: \"09:00\", appointmentDetails: \"testing\" });\r\n    }\r\n\r\n    // handleChange - runs on every keystroke in the form to update the React state, the displayed value will update as the user types\r\n    handleChange = event => {\r\n        console.log(event.target)\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        console.log(name, value)\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    // the SAVE (substitution of do something button) from the modal click need to call the db and save the info\r\n    // handleSubmit\r\n    handleSave = event => {\r\n        event.preventDefault()\r\n        console.log(\"handlesave\")\r\n        console.log(this.state)\r\n        let dayTemp = format(this.state.selectedDate, 'yyyyMMdd')\r\n        let newAppointment = {\r\n            day: dayTemp,\r\n            title: this.state.title,\r\n            timeStart: this.state.timeStart,\r\n            timeEnd: this.state.timeEnd,\r\n            appointmentDetails: this.state.appointmentDetails\r\n        }\r\n        // API call to create db pass the object newAppointment then when back you update state\r\n        // update db\r\n        // db.create(newEvent).then(res => this.setState.events(res))\r\n        // on response, update state\r\n\r\n        console.log(\"selected day:\", dayTemp)\r\n        this.setState({\r\n            temp: {\r\n                ...this.state.temp, \r\n                [dayTemp]: [\r\n                    {\r\n                        title: this.state.title,\r\n                        timeStart: this.state.timeStart,\r\n                        timeEnd: this.state.timeEnd,\r\n                        appointmentDetails: this.state.appointmentDetails\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n        // call update db and when back update state cleaning the info\r\n        this.setState({ modal: !this.state.modal, title: \"\", timeStart: \"\", timeEnd: \"\", appointmentDetails: \"\" });\r\n    }\r\n\r\n    //this is rendering the month header with the arrows to change month\r\n    renderHeader() {\r\n        const dateFormat = \"MMMM yyyy\";\r\n        return (\r\n            <div className=\"header row flex-middle\">\r\n                <div className=\"col col-start\">\r\n                    <div className=\"icon\" onClick={this.prevMonth}>\r\n                        chevron_left\r\n                    </div>\r\n                </div>\r\n                <div className=\"col col-center\">\r\n                    <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\r\n                </div>\r\n                <div className=\"col col-end\" onClick={this.nextMonth}>\r\n                    <div className=\"icon\">chevron_right</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //this is rendering the MON-SUN \r\n    renderDays() {\r\n        const dateFormat = \"iiii\";\r\n        const days = [];\r\n        let startDate = dateFns.startOfWeek(this.state.currentMonth);\r\n        for (let i = 0; i < 7; i++) {\r\n            days.push(\r\n                <div className=\"col col-center\" key={i}>\r\n                    {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n                </div>\r\n            );\r\n        }\r\n        return <div className=\"days row\">{days}</div>;\r\n    };\r\n\r\n    renderCells() {\r\n        const { currentMonth, selectedDate } = this.state;\r\n        const monthStart = dateFns.startOfMonth(currentMonth);\r\n        const monthEnd = dateFns.endOfMonth(monthStart);\r\n        const startDate = dateFns.startOfWeek(monthStart);\r\n        const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n        const dateFormat = \"d\";\r\n        const rows = [];\r\n\r\n        let days = [];\r\n        let day = startDate;\r\n        let formattedDate = \"\";\r\n\r\n        while (day <= endDate) {\r\n            for (let i = 0; i < 7; i++) {\r\n                formattedDate = dateFns.format(day, dateFormat);\r\n                const cloneDay = day;\r\n\r\n                days.push(\r\n                    <div className={`col cell ${\r\n                        !dateFns.isSameMonth(day, monthStart)\r\n                            ? \"disabled\"\r\n                            : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                        }`}\r\n                        key={day}\r\n                        onClick={() => this.onDateClick(cloneDay)}\r\n                    // onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\r\n                    >\r\n                        <span className=\"number\">{formattedDate}</span>\r\n                        <span className=\"bg\">{formattedDate}</span>\r\n\r\n\r\n                        {this.state.temp[format(day, 'yyyyMMdd')] &&\r\n                            //  console.log(format(day, 'yyyyMMdd'))\r\n                            this.state.temp[format(day, 'yyyyMMdd')].map(appt =>\r\n                                <SavedEvent\r\n                                    title={appt.title}\r\n                                    id={\"1\"}\r\n                                    handleClickApp={this.handleClickApp}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                );\r\n                day = dateFns.addDays(day, 1);\r\n            }\r\n            rows.push(\r\n                <div className=\"row\" key={day}>\r\n                    {days}\r\n                </div>\r\n            );\r\n            days = [];\r\n        }\r\n        return <div className=\"body\">{rows}</div>;\r\n    }\r\n\r\n    //pops the modal up when a day is clicked\r\n    onDateClick = day => {\r\n        console.log(\"clicked\", day);\r\n        this.toggle(day);\r\n    };\r\n\r\n    //when forward arrow is clicked, next month is shown\r\n    nextMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    //when back arrow is clicked, next month is shown\r\n    prevMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"calendar\">\r\n                    {this.renderHeader()}\r\n                    {this.renderDays()}\r\n                    {this.renderCells()}\r\n                </div>\r\n\r\n                <div>\r\n                    <Modal isOpen={this.state.modal} toggle={() => { this.toggle(this.state.selectedDate) }} className={this.props.className}>\r\n                        <ModalHeader toggle={() => { this.toggle(this.state.selectedDate) }}>{this.state.dayModal}</ModalHeader>\r\n                        <ModalBody>\r\n                            <CalendarDetail\r\n                                title={this.state.title}\r\n                                start={this.state.timeStart}\r\n                                end={this.state.timeEnd}\r\n                                detail={this.state.appointmentDetails}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.handleSave}>Save</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={() => { this.toggle(this.state.selectedDate) }}>Delete</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n\r\n    };\r\n\r\n    // LOGIN: need input fields (name, password, email)\r\n    // REGISTER: need input fields (..., password2)\r\n\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n        console.log(\"button\")\r\n        // handle form submit\r\n        // captures input values\r\n        // sends values to api register route, as an object {name, email, pw}\r\n        // on response, redirect to home page\r\n        axios.post('/api/users/login', {\r\n            email: \"example@email.com\",\r\n            password: \"1234\"\r\n        }).then(function (response) {\r\n            console.log(response)\r\n            // window.location.href = \"/private\";\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n              <container>\r\n              <FormGroup row>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <div style={{paddingTop: \"5%\"}}>Register</div>\r\n                </Col>\r\n                </FormGroup>\r\n                <Form action=\"/api/users/register\" method=\"post\">\r\n                <FormGroup row>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} style={{paddingTop: \".50%\"}}>\r\n          <Input type=\"name\" name=\"name\" id=\"name\" placeholder=\"Name\" />\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n          <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n          <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n          <Input type=\"password2\" name=\"password2\" id=\"password2\" placeholder=\"Re-enter Password\" />\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup check row>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} style={{paddingTop: \".50%\"}}>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Col>\r\n      </FormGroup>\r\n    </Form>\r\n    <FormGroup row>\r\n    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <div style={{paddingTop: \"5%\"}}>Login</div>\r\n                </Col>\r\n                </FormGroup>\r\n                <Form action=\"/api/users/login\" method=\"post\">\r\n      <FormGroup row style={{paddingTop: \".50%\"}}>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n          <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n          <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup check row>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} style={{paddingTop: \".50%\"}}>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Col>\r\n      </FormGroup>\r\n    </Form>\r\n    </container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass Success extends React.Component {\r\n    state = {\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n              <container>\r\n         <h2>You registered!</h2>\r\n    </container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Success;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Calendar from \"./components/Calender\";\r\nimport Login from \"./components/Login\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Success from \"./components/Success\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <header>\r\n            <div id=\"logo\">\r\n              <span className=\"icon\">date_range</span>\r\n              <span>\r\n                Pet<b>Quest</b>\r\n              </span>\r\n\r\n            </div>\r\n          </header>\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n              <Login />\r\n          </Route>\r\n          <Route exact path=\"/success\">\r\n              <Success />\r\n          </Route>\r\n          <Route exact path=\"/private\">\r\n              <Calendar />\r\n          </Route>\r\n          <Route>\r\n            <div>no route</div>\r\n          </Route>\r\n        </Switch>\r\n      </Router >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import registerServiceWorker from \"./registerServiceWorker\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}